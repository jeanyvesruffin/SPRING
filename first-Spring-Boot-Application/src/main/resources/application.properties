# internisons le fichier properties (ex sur l'url)
# spring.datasource.url = jdbc:postgresql://localhost:5432/spring
# devient alors 
spring.datasource.url = ${DB_URL}
# allez à Run configurations --> Environment ---> add
# puis renseigner 
# variables par DB_URL
# value par jdbc:postgresql://localhost:5432/spring

spring.datasource.username = postgres
spring.datasource.password = root
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.show-sql = true

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

# Pour changer le port d'ecoute de l'api renseigner le comme suit:
# server.port=5000         (par exemple ou 8080....)

# server.port=5000
# voir .Yml pour la configuration du port



# Spring propose de gerer differents environnement (fonctionne avec les fichiers properties et yml):
# application-{profile}.properties
# application-dev.properties
# application-prod.properties

# Pour etre gere par Spring nous devons ajouter en arg la ligne de commande suivante dans 
# Run configurations --> Arguments ---> VM arguments -->add
# -Dspring.profiles.active=dev
# pour activer , par ex, dev sinon prod....ect

app.version = 1.0.0